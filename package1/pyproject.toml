[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"


[project]
name = "monorepo_package1"
version = "0.1.2"
authors = [{ name = "Matt Haberland", email = "matt.haberland@gmail.com" }]
description = "Short description here"
license = { text = "MIT" }
requires-python = ">=3.10"


[dependencies]
# Runtime dependencies for package1


[tool.flit.module]
name = "package1"



# [tool.semantic_release]
# version_variable = "src/package1/__init__.py:__version__"
# version_source = "tag"
# branch = "main"
# upload_to_pypi = false  # Set to true for real releases
# build_command = "flit build"
# tag_format = "package1-v{version}"
# upload_to_release = false


# [tool.semantic_release.changelog.default_templates]
# changelog_file = "CHANGELOG.md"

# [tool.semantic_release.logging]
# level = "DEBUG"


[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
assets = []
build_command = "flit build"
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
repo_dir = "C:\\Users\\matth\\Desktop\\monorepo\\package1"
no_git_verify = false
tag_format = "package1-v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
mode = "update"
insertion_flag = "<!-- version list -->"
template_dir = "templates"
# Recommended patterns for conventional commits parser that is scope aware
exclude_commit_patterns = [
    '''chore(?:\([^)]*?\))?: .+''',
    '''ci(?:\([^)]*?\))?: .+''',
    '''refactor(?:\([^)]*?\))?: .+''',
    '''style(?:\([^)]*?\))?: .+''',
    '''test(?:\([^)]*?\))?: .+''',
    '''build\((?!deps\): .+)''',
    '''Initial [Cc]ommit.*''',
]

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = true

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["package1-feat"]
patch_tags = ["package1-fix", "package1-perf"]+
allowed_tags = ["package1-feat", "package1-fix", "package1-perf"]
default_bump_level = 0
parse_squash_commits = true
ignore_merge_commits = true

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
